name: CI

on:
  pull_request:
    branches: [main]
  push: 
    branches: [main]

jobs:
  emulated:
    name: ${{ matrix.arch }} on ${{ matrix.distro}} with ${{ matrix.cc }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cc: ['gcc', 'clang']
        arch: ['aarch64', 'armv7', 'ppc64le', 's390x']
        distro: ['alpine_latest', 'bullseye']
    steps:
      - name: Checkout base repo
        uses: actions/checkout@v2
      - name: Build and test
        uses: uraimo/run-on-arch-action@v2.1.1
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          install: |
            case "${{ matrix.distro }}" in
              bullseye)
                apt-get update -q -y
                apt-get install -q -y ${{ matrix.cc }} meson python3-cffi python3-distutils
                ;;
              alpine*)
                apk update
                apk add ${{ matrix.cc }} meson musl-dev build-base py3-cffi
                ;;
            esac
          run: |
            CC=${{ matrix.cc }} meson setup build
            cd build
            ninja test
  native:
    name: ${{ matrix.os }} with ${{ matrix.cc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        cc: ['gcc', 'clang']
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout base repo
        uses: actions/checkout@v2
      - name: Install dependencies (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install meson python3-cffi
      - name: Install dependencies (Mac)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew update
          brew install meson pkg-config libffi
      - name: Set up python-cffi (Mac)
        if: ${{ matrix.os == 'macos-latest' }}
        run: PKG_CONFIG_PATH=/usr/local/opt/libffi/lib/pkgconfig pip install cffi
      - name: Configure Meson
        run: CC=${{ matrix.cc }} meson setup build
      - name: Build and test
        run: cd build && ninja test
  mingw:
    name: MinGW with ${{ matrix.cc }}
    runs-on: windows-latest
    strategy:
      matrix:
        cc: ['gcc', 'clang']
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Set up MinGW
        uses: msys2/setup-msys2@v2
        with:
          install: >-
            base-devel
            git
            ${{ matrix.cc }}
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-python-cffi
      - name: Checkout base repo
        uses: actions/checkout@v2
      - name: Configure meson
        run: CC=${{ matrix.cc }} meson setup build
      - name: Build and test
        run: cd build && ninja test
